# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: scheduler auth Server with CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env: # docker가 실행할 애플리케이션의 yml 설정 파일 환경변수를 env로 설정하며, 실제 값은 Github 레포 secrets에서 가져옴. 
      SPRING_DATASOURCE_URL: ${{secrets.SPRING_DATASOURCE_URL}}
      SPRING_DATASOURCE_USERNAME: ${{secrets.SPRING_DATASOURCE_USERNAME}}
      SPRING_DATASOURCE_PASSWORD: ${{secrets.SPRING_DATASOURCE_PASSWORD}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      NAVER_CLIENT_ID: ${{secrets.NAVER_CLIENT_ID}}
      NAVER_REDIRECT_URI: ${{secrets.NAVER_REDIRECT_URI}}
      GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
      GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
      GOOGLE_REDIRECT_URI: ${{secrets.GOOGLE_REDIRECT_URI}}
      working-directory: ./be/stackoverflow-be
      
    permissions:
      contents: read
      packages: write

    steps:
    - name: checkout
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    ## create application-database.yml
    - name: create application.properties
      run: |        
        ## create application.properties
        cd ./src/main/resources

        ## properties 파일 생성
        touch ./application.properties

        ## GitHub-Actions 에서 설정한 값을 application.properties 파일에 쓰기
        echo "${{ secrets.PROPERTIES }}" >> ./application.properties

      shell: bash

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew bootJar


    ## 웹 이미지 빌드 및 도커허브에 push
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build --build-arg SPRING_DATASOURCE_URL="${{env.SPRING_DATASOURCE_URL}}" \
          --build-arg SPRING_DATASOURCE_USERNAME="${{env.SPRING_DATASOURCE_USERNAME}}" \
          --build-arg SPRING_DATASOURCE_PASSWORD="${{env.SPRING_DATASOURCE_PASSWORD}}" \
          --build-arg JWT_SECRET="${{env.JWT_SECRET}}" \
          --build-arg NAVER_CLIENT_ID="${{env.NAVER_CLIENT_ID}}" \
          --build-arg NAVER_CLIENT_SECRET="${{env.NAVER_CLIENT_SECRET}}" \
          --build-arg NAVER_REDIRECT_URI="${{env.NAVER_REDIRECT_URI}}" \
          --build-arg GOOGLE_CLIENT_ID="${{env.GOOGLE_CLIENT_ID}}" \
          --build-arg GOOGLE_CLIENT_SECRET="${{env.GOOGLE_CLIENT_SECRET}}" \
          --build-arg GOOGLE_REDIRECT_URI="${{env.GOOGLE_REDIRECT_URI}}"
          -t ${{ secrets.DOCKER_REPO }}/scheduler-auth .
        docker push ${{ secrets.DOCKER_REPO }}/scheduler-auth
        
    ## docker compose up
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(sudo docker ps -qa --filter "name=auth")
          sudo docker pull ${{ secrets.DOCKER_REPO }}/scheduler-auth
          sudo docker-compose -f scheduler/docker-compose-auth.yml up -d
          sudo docker image prune -f
